version: '3.9'

x-common:
  &common
  build: .
  image: apache/airflow:2.3.0
  user: "${AIRFLOW_UID}:0"
  env_file:
    - .env
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - /var/run/docker.sock:/var/run/docker.sock
    - ./airflow-data/airflow.cfg:/opt/airflow/airflow.cf
  networks:
    - backend
    
x-depends-on:
  &depends-on
  depends_on:
    postgres:
      condition: service_healthy
    airflow-init:
      condition: service_completed_successfully

services:
  postgres:
    image: postgres:13
    container_name: postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    env_file: 
      - .env
    # network_mode: host
    # networks:
    #   backend:
    #     ipv4_address: 172.20.0.10
    networks:
      - backend
  
  mysql:
    image: mysql/mysql-server:5.7
    env_file: 
      - .env
    ports:
      - '3306:3306'
    volumes:
      - './.mysql-data/db:/var/lib/mysql'
      - './initial.sql:/docker-entrypoint-initdb.d/initial.sql'
    # network_mode: host
    # networks:
    #   backend:
    #     ipv4_address: 172.20.0.11
    networks:
      - backend

  scheduler:
    <<: *common
    <<: *depends-on
    container_name: airflow-scheduler
    command: scheduler
    restart: on-failure
    ports:
      - "8793:8793"
    # networks:
    #   backend:
    #     ipv4_address: 172.20.0.14

  webserver:
    <<: *common 
    <<: *depends-on
    container_name: airflow-webserver
    restart: always
    command: webserver
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 30s
      retries: 5
    # networks:
    #   backend:
    #     ipv4_address: 172.20.0.15

  airflow-init:
    <<: *common
    container_name: airflow-init
    entrypoint: /bin/bash
    command:
      - -c
      - |
        mkdir -p /sources/logs /sources/dags /sources/plugins
        chown -R "${AIRFLOW_UID}:0" /sources/{logs,dags,plugins}
        exec /entrypoint airflow version
    depends_on:
      postgres:
        condition: service_healthy

  
  mymongodb:
    image: mongo:4.2.3-bionic
    container_name: my-mongodb
    ports:
      - 27017:27017
    env_file: 
      - .env
    volumes:
      - ./mongo-entrypoint:/docker-entrypoint-initdb.d
      - ./dbdata/mongodb/db:/data/db
      - ./dbdata/mongodb/configdb:/data/configdb
    # network_mode: host
    # networks:
    #   backend:
    #     ipv4_address: 172.20.0.12
    networks:
      - backend

networks:
  backend:
    ipam:
      config:
        - subnet: 172.20.0.0/24
          gateway: 172.20.0.1
    driver: 'bridge'

volumes:
  database-data: